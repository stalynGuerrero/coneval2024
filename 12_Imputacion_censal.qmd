# 12_Imputacion_censal

Para la ejecución del presente análisis, se debe abrir el archivo **12_Imputacion_censal.R** disponible en la ruta **Rcodes/2020/12_Imputacion_censal.R**.

Este script en R se centra en el análisis y la predicción de datos utilizando modelos estadísticos ajustados a encuestas y censos. Primero, se limpia el entorno de trabajo y se cargan diversas librerías necesarias para el análisis. Luego, se leen modelos previamente ajustados (`fit_ingreso`, `fit_alimento`, `fit_salud`) y datos de encuestas y líneas de bienestar. Se realiza una combinación de datos entre las encuestas y predictores de nivel estatal, y se calculan predicciones basadas en estos modelos. Los resultados de estas predicciones se almacenan en un archivo RDS para su posterior análisis.

El script también incluye un paso para ajustar y validar los datos de la encuesta ampliada mediante simulaciones de variables predictoras y el cálculo de medidas de desviación estándar residual. Posteriormente, se lleva a cabo un proceso iterativo para generar nuevas predicciones y comparar estas predicciones con las originales. Finalmente, el script prepara los datos para un análisis posterior al actualizar las variables con valores simulados basados en las predicciones y desviaciones calculadas. Este proceso permite validar y ajustar los modelos utilizados, asegurando la precisión de las predicciones en la encuesta ampliada.

```{r, eval=FALSE}
### Cleaning R environment ###
rm(list = ls())

#################
### Libraries ###
#################
library(tidyverse)
library(data.table)
library(openxlsx)
library(magrittr)
library(haven)
library(labelled)
library(sampling)
library(lme4)
library(survey)
library(srvyr)
cat("\f")
source("../source/benchmarking_indicador.R")
###############################################################
# Lectura del modelo 
###############################################################

fit_ingreso <-
  readRDS("../output/2020/modelos/fit_mrp_ictpc.rds")$fit_mrp

fit_alimento <-
  readRDS("../output/2020/modelos/fit_mrp_ic_ali_nc.rds")$fit_mrp
fit_salud <-
  readRDS("../output/2020/modelos/fit_mrp_ic_segsoc.rds")$fit_mrp

encuesta_enigh <-readRDS("../input/2020/enigh/encuesta_sta.rds") %>%
  mutate(ingreso = ictpc)


# lineas de bienestar 

LB <-
  read.delim(
    "input/2020/Lineas_Bienestar.csv",
    header = TRUE,
    sep = ";",
    dec = ","
  ) %>% mutate(area = as.character(area))

statelevel_predictors <- 
  readRDS("../input/2020/predictores/statelevel_predictors_df.rds")
###############################################################
# Lectura del muestras intercensal o  muestra_ampliada del censo
###############################################################

muestra_ampliada <- readRDS("../output/2020/encuesta_ampliada.rds")
col_names_muestra <- names(muestra_ampliada)

muestra_ampliada <-  inner_join(muestra_ampliada, statelevel_predictors)
muestra_ampliada <- muestra_ampliada %>% inner_join(LB) 

###############################################################
encuesta_sta <- inner_join(encuesta_enigh, 
                           statelevel_predictors )
pred_ingreso <- predict(fit_ingreso, 
                        newdata = encuesta_sta)
rm(encuesta_sta)

paso <-encuesta_enigh %>% mutate(pred_ingreso = pred_ingreso) %>% 
  survey::svydesign(id =~upm , strata = ~estrato , data = .,weights = ~fep) %>% 
  as_survey_design()

sd_1 <- paso %>% group_by(cve_mun) %>% 
  summarise(media_obs = survey_mean(ingreso), 
            media_pred = survey_mean(pred_ingreso)) %>% 
  summarise(media_sd = sqrt(mean(c(media_obs - media_pred)^2)))

desv_estandar_residual <- min(c(as.numeric(sd_1), sigma(fit_ingreso)))

rm(list = c("pred_ingreso","sd_1", "paso", "statelevel_predictors"))

################################################################################
# IPM en la enigh
################################################################################

encuesta_enigh <-
  encuesta_enigh %>% inner_join(LB)  %>% 
   mutate(
   tol_ic = ic_segsoc + ic_ali_nc + ic_asalud + ic_cv +  ic_sbv + ic_rezedu,
   ipm   = case_when(
     # Población en situación de pobreza.
     ingreso < lp  &  tol_ic >= 1 ~ "I",
     # Población vulnerable por carencias sociales.
     ingreso >= lp & tol_ic >= 1 ~ "II",
     # Poblacion vulnerable por ingresos.
     ingreso <= lp & tol_ic < 1 ~ "III",
     # Población no pobre multidimensional y no vulnerable.
     ingreso >= lp & tol_ic < 1 ~ "IV"
     )
   )


################################################################################
# predict de los modelos en la encuesta 
################################################################################

pred_ingreso <- predict(fit_ingreso, 
                        newdata = muestra_ampliada,
                        allow.new.levels = TRUE, 
                        type = "response")

pred_ic_ali_nc <- predict(fit_alimento, 
                        newdata = muestra_ampliada,
                        allow.new.levels = TRUE, 
                        type = "response")

pred_segsoc <- predict(fit_salud, 
                        newdata = muestra_ampliada,
                       allow.new.levels = TRUE, 
                       type = "response")

saveRDS(list(pred_ingreso = pred_ingreso, 
          pred_ic_ali_nc = pred_ic_ali_nc, 
          pred_segsoc = pred_segsoc, 
          desv_estandar_residual = desv_estandar_residual),
     file =  "../output/2020/modelos/predicciones.rds")

muestra_ampliada   %<>% mutate(
    ic_asalud = ifelse(ic_asalud == 1, 1,0),
    ic_cv = ifelse(ic_cv == 1, 1,0),
    ic_sbv = ifelse(ic_sbv == 1, 1,0),
    ic_rezedu = ifelse(ic_rezedu == 1, 1,0)) 


################################################################################
# Inica el proceso iterativo 
################################################################################

muestra_ampliada_pred <-
  muestra_ampliada %>% 
  select(all_of(col_names_muestra),li,lp) %>%
  mutate(
    ic_segsoc = rbinom(n = n(), size = 1, prob = pred_segsoc),
    ic_ali_nc = rbinom(n = n(), size = 1, prob = pred_ic_ali_nc),
    ingreso = pred_ingreso + rnorm(n = n(),mean = 0, desv_estandar_residual),
    tol_ic = ic_segsoc + ic_ali_nc + ic_asalud + ic_cv +
      ic_sbv + ic_rezedu
    
  )
# Validación de los predict 
mean(muestra_ampliada_pred$ic_ali_nc) - mean(pred_ic_ali_nc)

mean(muestra_ampliada_pred$ic_segsoc) - mean(pred_segsoc)

mean(muestra_ampliada_pred$ingreso) - mean(pred_ingreso)
```